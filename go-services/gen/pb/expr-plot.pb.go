// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.27.1
// source: expr-plot.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PlotExpression struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Expression string `protobuf:"bytes,1,opt,name=expression,proto3" json:"expression,omitempty"`
	Domain     string `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	Samples    int32  `protobuf:"varint,3,opt,name=samples,proto3" json:"samples,omitempty"`
	Color      string `protobuf:"bytes,4,opt,name=color,proto3" json:"color,omitempty"`
	LineStyle  string `protobuf:"bytes,5,opt,name=line_style,json=lineStyle,proto3" json:"line_style,omitempty"`
	LineWidth  string `protobuf:"bytes,6,opt,name=line_width,json=lineWidth,proto3" json:"line_width,omitempty"`
	Legend     string `protobuf:"bytes,7,opt,name=legend,proto3" json:"legend,omitempty"`
}

func (x *PlotExpression) Reset() {
	*x = PlotExpression{}
	if protoimpl.UnsafeEnabled {
		mi := &file_expr_plot_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlotExpression) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlotExpression) ProtoMessage() {}

func (x *PlotExpression) ProtoReflect() protoreflect.Message {
	mi := &file_expr_plot_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlotExpression.ProtoReflect.Descriptor instead.
func (*PlotExpression) Descriptor() ([]byte, []int) {
	return file_expr_plot_proto_rawDescGZIP(), []int{0}
}

func (x *PlotExpression) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

func (x *PlotExpression) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *PlotExpression) GetSamples() int32 {
	if x != nil {
		return x.Samples
	}
	return 0
}

func (x *PlotExpression) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *PlotExpression) GetLineStyle() string {
	if x != nil {
		return x.LineStyle
	}
	return ""
}

func (x *PlotExpression) GetLineWidth() string {
	if x != nil {
		return x.LineWidth
	}
	return ""
}

func (x *PlotExpression) GetLegend() string {
	if x != nil {
		return x.Legend
	}
	return ""
}

type ExprPlotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	XLabel string            `protobuf:"bytes,1,opt,name=x_label,json=xLabel,proto3" json:"x_label,omitempty"`
	YLabel string            `protobuf:"bytes,2,opt,name=y_label,json=yLabel,proto3" json:"y_label,omitempty"`
	XMin   string            `protobuf:"bytes,3,opt,name=x_min,json=xMin,proto3" json:"x_min,omitempty"`
	XMax   string            `protobuf:"bytes,4,opt,name=x_max,json=xMax,proto3" json:"x_max,omitempty"`
	YMin   string            `protobuf:"bytes,5,opt,name=y_min,json=yMin,proto3" json:"y_min,omitempty"`
	YMax   string            `protobuf:"bytes,6,opt,name=y_max,json=yMax,proto3" json:"y_max,omitempty"`
	Grid   bool              `protobuf:"varint,7,opt,name=grid,proto3" json:"grid,omitempty"`
	Plots  []*PlotExpression `protobuf:"bytes,8,rep,name=plots,proto3" json:"plots,omitempty"`
}

func (x *ExprPlotRequest) Reset() {
	*x = ExprPlotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_expr_plot_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExprPlotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExprPlotRequest) ProtoMessage() {}

func (x *ExprPlotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_expr_plot_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExprPlotRequest.ProtoReflect.Descriptor instead.
func (*ExprPlotRequest) Descriptor() ([]byte, []int) {
	return file_expr_plot_proto_rawDescGZIP(), []int{1}
}

func (x *ExprPlotRequest) GetXLabel() string {
	if x != nil {
		return x.XLabel
	}
	return ""
}

func (x *ExprPlotRequest) GetYLabel() string {
	if x != nil {
		return x.YLabel
	}
	return ""
}

func (x *ExprPlotRequest) GetXMin() string {
	if x != nil {
		return x.XMin
	}
	return ""
}

func (x *ExprPlotRequest) GetXMax() string {
	if x != nil {
		return x.XMax
	}
	return ""
}

func (x *ExprPlotRequest) GetYMin() string {
	if x != nil {
		return x.YMin
	}
	return ""
}

func (x *ExprPlotRequest) GetYMax() string {
	if x != nil {
		return x.YMax
	}
	return ""
}

func (x *ExprPlotRequest) GetGrid() bool {
	if x != nil {
		return x.Grid
	}
	return false
}

func (x *ExprPlotRequest) GetPlots() []*PlotExpression {
	if x != nil {
		return x.Plots
	}
	return nil
}

type ExprPlotResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LatexSrcCode string `protobuf:"bytes,1,opt,name=latex_src_code,json=latexSrcCode,proto3" json:"latex_src_code,omitempty"`
	PdfPlot      []byte `protobuf:"bytes,2,opt,name=pdf_plot,json=pdfPlot,proto3" json:"pdf_plot,omitempty"`
}

func (x *ExprPlotResponse) Reset() {
	*x = ExprPlotResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_expr_plot_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExprPlotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExprPlotResponse) ProtoMessage() {}

func (x *ExprPlotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_expr_plot_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExprPlotResponse.ProtoReflect.Descriptor instead.
func (*ExprPlotResponse) Descriptor() ([]byte, []int) {
	return file_expr_plot_proto_rawDescGZIP(), []int{2}
}

func (x *ExprPlotResponse) GetLatexSrcCode() string {
	if x != nil {
		return x.LatexSrcCode
	}
	return ""
}

func (x *ExprPlotResponse) GetPdfPlot() []byte {
	if x != nil {
		return x.PdfPlot
	}
	return nil
}

var File_expr_plot_proto protoreflect.FileDescriptor

var file_expr_plot_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x65, 0x78, 0x70, 0x72, 0x2d, 0x70, 0x6c, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x04, 0x70, 0x6c, 0x6f, 0x74, 0x22, 0xce, 0x01, 0x0a, 0x0e, 0x50, 0x6c, 0x6f, 0x74,
	0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x74, 0x79, 0x6c, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x79, 0x6c,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x69, 0x6e, 0x65, 0x57, 0x69, 0x64, 0x74, 0x68,
	0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x67, 0x65, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6c, 0x65, 0x67, 0x65, 0x6e, 0x64, 0x22, 0xd7, 0x01, 0x0a, 0x0f, 0x45, 0x78, 0x70,
	0x72, 0x50, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x78, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x78,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x79, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x79, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x13,
	0x0a, 0x05, 0x78, 0x5f, 0x6d, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x78,
	0x4d, 0x69, 0x6e, 0x12, 0x13, 0x0a, 0x05, 0x78, 0x5f, 0x6d, 0x61, 0x78, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x78, 0x4d, 0x61, 0x78, 0x12, 0x13, 0x0a, 0x05, 0x79, 0x5f, 0x6d, 0x69,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x79, 0x4d, 0x69, 0x6e, 0x12, 0x13, 0x0a,
	0x05, 0x79, 0x5f, 0x6d, 0x61, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x79, 0x4d,
	0x61, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x72, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x04, 0x67, 0x72, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x05, 0x70, 0x6c, 0x6f, 0x74, 0x73, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x6c, 0x6f, 0x74, 0x2e, 0x50, 0x6c, 0x6f,
	0x74, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x70, 0x6c, 0x6f,
	0x74, 0x73, 0x22, 0x53, 0x0a, 0x10, 0x45, 0x78, 0x70, 0x72, 0x50, 0x6c, 0x6f, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x6c, 0x61, 0x74, 0x65, 0x78, 0x5f,
	0x73, 0x72, 0x63, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x6c, 0x61, 0x74, 0x65, 0x78, 0x53, 0x72, 0x63, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x70, 0x64, 0x66, 0x5f, 0x70, 0x6c, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x70, 0x64, 0x66, 0x50, 0x6c, 0x6f, 0x74, 0x32, 0x56, 0x0a, 0x15, 0x45, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x6c, 0x6f, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x3d, 0x0a, 0x0c, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x6f, 0x74,
	0x12, 0x15, 0x2e, 0x70, 0x6c, 0x6f, 0x74, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x50, 0x6c, 0x6f, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x6c, 0x6f, 0x74, 0x2e, 0x45,
	0x78, 0x70, 0x72, 0x50, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x1c, 0x5a, 0x1a, 0x6c, 0x74, 0x70, 0x6c, 0x6f, 0x74, 0x74, 0x65, 0x72, 0x2f, 0x65, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x76, 0x63, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_expr_plot_proto_rawDescOnce sync.Once
	file_expr_plot_proto_rawDescData = file_expr_plot_proto_rawDesc
)

func file_expr_plot_proto_rawDescGZIP() []byte {
	file_expr_plot_proto_rawDescOnce.Do(func() {
		file_expr_plot_proto_rawDescData = protoimpl.X.CompressGZIP(file_expr_plot_proto_rawDescData)
	})
	return file_expr_plot_proto_rawDescData
}

var file_expr_plot_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_expr_plot_proto_goTypes = []interface{}{
	(*PlotExpression)(nil),   // 0: plot.PlotExpression
	(*ExprPlotRequest)(nil),  // 1: plot.ExprPlotRequest
	(*ExprPlotResponse)(nil), // 2: plot.ExprPlotResponse
}
var file_expr_plot_proto_depIdxs = []int32{
	0, // 0: plot.ExprPlotRequest.plots:type_name -> plot.PlotExpression
	1, // 1: plot.ExpressionPlotService.GeneratePlot:input_type -> plot.ExprPlotRequest
	2, // 2: plot.ExpressionPlotService.GeneratePlot:output_type -> plot.ExprPlotResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_expr_plot_proto_init() }
func file_expr_plot_proto_init() {
	if File_expr_plot_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_expr_plot_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlotExpression); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_expr_plot_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExprPlotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_expr_plot_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExprPlotResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_expr_plot_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_expr_plot_proto_goTypes,
		DependencyIndexes: file_expr_plot_proto_depIdxs,
		MessageInfos:      file_expr_plot_proto_msgTypes,
	}.Build()
	File_expr_plot_proto = out.File
	file_expr_plot_proto_rawDesc = nil
	file_expr_plot_proto_goTypes = nil
	file_expr_plot_proto_depIdxs = nil
}
