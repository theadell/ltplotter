// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v5.27.1
// source: plot.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// PlotServiceClient is the client API for PlotService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PlotServiceClient interface {
	GeneratePlot(ctx context.Context, in *PlotRequest, opts ...grpc.CallOption) (*PlotResponse, error)
}

type plotServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPlotServiceClient(cc grpc.ClientConnInterface) PlotServiceClient {
	return &plotServiceClient{cc}
}

func (c *plotServiceClient) GeneratePlot(ctx context.Context, in *PlotRequest, opts ...grpc.CallOption) (*PlotResponse, error) {
	out := new(PlotResponse)
	err := c.cc.Invoke(ctx, "/plot.PlotService/GeneratePlot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PlotServiceServer is the server API for PlotService service.
// All implementations must embed UnimplementedPlotServiceServer
// for forward compatibility
type PlotServiceServer interface {
	GeneratePlot(context.Context, *PlotRequest) (*PlotResponse, error)
	mustEmbedUnimplementedPlotServiceServer()
}

// UnimplementedPlotServiceServer must be embedded to have forward compatible implementations.
type UnimplementedPlotServiceServer struct {
}

func (UnimplementedPlotServiceServer) GeneratePlot(context.Context, *PlotRequest) (*PlotResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GeneratePlot not implemented")
}
func (UnimplementedPlotServiceServer) mustEmbedUnimplementedPlotServiceServer() {}

// UnsafePlotServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PlotServiceServer will
// result in compilation errors.
type UnsafePlotServiceServer interface {
	mustEmbedUnimplementedPlotServiceServer()
}

func RegisterPlotServiceServer(s grpc.ServiceRegistrar, srv PlotServiceServer) {
	s.RegisterService(&PlotService_ServiceDesc, srv)
}

func _PlotService_GeneratePlot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PlotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlotServiceServer).GeneratePlot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/plot.PlotService/GeneratePlot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlotServiceServer).GeneratePlot(ctx, req.(*PlotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// PlotService_ServiceDesc is the grpc.ServiceDesc for PlotService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PlotService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "plot.PlotService",
	HandlerType: (*PlotServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GeneratePlot",
			Handler:    _PlotService_GeneratePlot_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "plot.proto",
}
